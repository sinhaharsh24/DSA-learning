
sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git help
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]
           [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]
           [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   restore    Restore working tree files
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   diff       Show changes between commits, commit and working tree, etc
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   backfill   Download missing objects in a partial clone
   branch     List, create, or delete branches
   commit     Record changes to the repository
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   reset      Reset current HEAD to the specified state
   switch     Switch branches
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.


sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git upstream
git: 'upstream' is not a git command. See 'git --help'.

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git --help
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]
           [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]
           [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   restore    Restore working tree files
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   diff       Show changes between commits, commit and working tree, etc
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   backfill   Download missing objects in a partial clone
   branch     List, create, or delete branches
   commit     Record changes to the repository
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   reset      Reset current HEAD to the specified state
   switch     Switch branches
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git remote add upstream https://github.com/sinhaharsh24/DSA-learning.git

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git status
On branch master
nothing to commit, working tree clean

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git add .

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git commit -m "test"
On branch master
nothing to commit, working tree clean

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git push upstream
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream upstream master

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.


sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git remote add origin https://github.com/sinhaharsh24/DSA-learning.git

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git remote -v
origin  https://github.com/sinhaharsh24/DSA-learning.git (fetch)
origin  https://github.com/sinhaharsh24/DSA-learning.git (push)
upstream        https://github.com/sinhaharsh24/DSA-learning.git (fetch)
upstream        https://github.com/sinhaharsh24/DSA-learning.git (push)

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git push upstream
info: please complete authentication in your browser...
Enumerating objects: 104, done.
Counting objects: 100% (104/104), done.
Delta compression using up to 4 threads
Compressing objects: 100% (90/90), done.
Writing objects: 100% (104/104), 27.62 KiB | 884.00 KiB/s, done.
Total 104 (delta 27), reused 0 (delta 0), pack-reused 0 (from 0)
remote: Resolving deltas: 100% (27/27), done.
remote:
remote: Create a pull request for 'master' on GitHub by visiting:
remote:      https://github.com/sinhaharsh24/DSA-learning/pull/new/master
remote:
To https://github.com/sinhaharsh24/DSA-learning.git
 * [new branch]      master -> master

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git origin fetch
git: 'origin' is not a git command. See 'git --help'.

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git fetch
remote: Enumerating objects: 3, done.
remote: Counting objects: 100% (3/3), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
Unpacking objects: 100% (3/3), 870 bytes | 45.00 KiB/s, done.
From https://github.com/sinhaharsh24/DSA-learning
 * [new branch]      main       -> origin/main
 * [new branch]      master     -> origin/master

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git remote
origin
upstream

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git fetch origin

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git fetch upstream
From https://github.com/sinhaharsh24/DSA-learning
 * [new branch]      main       -> upstream/main

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    .idea/.gitignore
        deleted:    .idea/misc.xml
        deleted:    .idea/modules.xml
        deleted:    .idea/vcs.xml
        deleted:    First.class
        deleted:    First.java
        deleted:    alphabet_casecheck.class
        deleted:    alphabet_casecheck.java
        deleted:    array_learning.java
        deleted:    calculator_program.class
        deleted:    calculator_program.java
        deleted:    conditions_topic.class
        deleted:    conditions_topic.java
        deleted:    fibonacchi_loop.class
        deleted:    fibonacchi_loop.java
        deleted:    first1.txt
        deleted:    functions_learning.java
        deleted:    largest_number.class
        deleted:    largest_number.java
        deleted:    learnig DSA part 1.iml
        deleted:    multidimension_array.java
        deleted:    no_of_char.class
        deleted:    no_of_char.java
        deleted:    out/production/learnig DSA part 1/.idea/.gitignore
        deleted:    out/production/learnig DSA part 1/.idea/misc.xml
        deleted:    out/production/learnig DSA part 1/.idea/modules.xml
        deleted:    out/production/learnig DSA part 1/.idea/vcs.xml
        deleted:    out/production/learnig DSA part 1/First.class
        deleted:    out/production/learnig DSA part 1/alphabet_casecheck.class
        deleted:    out/production/learnig DSA part 1/array_learning.class
        deleted:    out/production/learnig DSA part 1/calculator_program.class
        deleted:    out/production/learnig DSA part 1/conditions_topic.class
        deleted:    out/production/learnig DSA part 1/fibonacchi_loop.class
        deleted:    out/production/learnig DSA part 1/first1.txt
        deleted:    out/production/learnig DSA part 1/functions_learning.class
        deleted:    out/production/learnig DSA part 1/largest_number.class
        deleted:    out/production/learnig DSA part 1/learnig DSA part 1.iml
        deleted:    out/production/learnig DSA part 1/multidimension_array.class
        deleted:    out/production/learnig DSA part 1/no_of_char.class
        deleted:    out/production/learnig DSA part 1/reverse_char.class
        deleted:    out/production/learnig DSA part 1/scope_program.class
        deleted:    out/production/learnig DSA part 1/shadowing_program.class
        deleted:    out/production/learnig DSA part 1/swap_program.class
        deleted:    out/production/learnig DSA part 1/switch_statement.class
        deleted:    out/production/learnig DSA part 1/temperature_program.class
        deleted:    out/production/learnig DSA part 1/two_sum.class
        deleted:    out/production/learnig DSA part 1/var_args.class
        deleted:    reverse_char.class
        deleted:    reverse_char.java
        deleted:    scope_program.java
        deleted:    shadowing_program.java
        deleted:    swap_program.java
        deleted:    switch_statement.class
        deleted:    switch_statement.java
        deleted:    temperature_program.class
        deleted:    temperature_program.java
        deleted:    two_sum.java
        deleted:    var_args.java

no changes added to commit (use "git add" and/or "git commit -a")

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    .idea/.gitignore
        deleted:    .idea/misc.xml
        deleted:    .idea/modules.xml
        deleted:    .idea/vcs.xml
        deleted:    First.class
        deleted:    First.java
        deleted:    alphabet_casecheck.class
        deleted:    alphabet_casecheck.java
        deleted:    array_learning.java
        deleted:    calculator_program.class
        deleted:    calculator_program.java
        deleted:    conditions_topic.class
        deleted:    conditions_topic.java
        deleted:    fibonacchi_loop.class
        deleted:    fibonacchi_loop.java
        deleted:    first1.txt
        deleted:    functions_learning.java
        deleted:    largest_number.class
        deleted:    largest_number.java
        deleted:    learnig DSA part 1.iml
        deleted:    multidimension_array.java
        deleted:    no_of_char.class
        deleted:    no_of_char.java
        deleted:    out/production/learnig DSA part 1/.idea/.gitignore
        deleted:    out/production/learnig DSA part 1/.idea/misc.xml
        deleted:    out/production/learnig DSA part 1/.idea/modules.xml
        deleted:    out/production/learnig DSA part 1/.idea/vcs.xml
        deleted:    out/production/learnig DSA part 1/First.class
        deleted:    out/production/learnig DSA part 1/alphabet_casecheck.class
        deleted:    out/production/learnig DSA part 1/array_learning.class
        deleted:    out/production/learnig DSA part 1/calculator_program.class
        deleted:    out/production/learnig DSA part 1/conditions_topic.class
        deleted:    out/production/learnig DSA part 1/fibonacchi_loop.class
        deleted:    out/production/learnig DSA part 1/first1.txt
        deleted:    out/production/learnig DSA part 1/functions_learning.class
        deleted:    out/production/learnig DSA part 1/largest_number.class
        deleted:    out/production/learnig DSA part 1/learnig DSA part 1.iml
        deleted:    out/production/learnig DSA part 1/multidimension_array.class
        deleted:    out/production/learnig DSA part 1/no_of_char.class
        deleted:    out/production/learnig DSA part 1/reverse_char.class
        deleted:    out/production/learnig DSA part 1/scope_program.class
        deleted:    out/production/learnig DSA part 1/shadowing_program.class
        deleted:    out/production/learnig DSA part 1/swap_program.class
        deleted:    out/production/learnig DSA part 1/switch_statement.class
        deleted:    out/production/learnig DSA part 1/temperature_program.class
        deleted:    out/production/learnig DSA part 1/two_sum.class
        deleted:    out/production/learnig DSA part 1/var_args.class
        deleted:    reverse_char.class
        deleted:    reverse_char.java
        deleted:    scope_program.java
        deleted:    shadowing_program.java
        deleted:    swap_program.java
        deleted:    switch_statement.class
        deleted:    switch_statement.java
        deleted:    temperature_program.class
        deleted:    temperature_program.java
        deleted:    two_sum.java
        deleted:    var_args.java

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        New Text Document.txt

no changes added to commit (use "git add" and/or "git commit -a")

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git fetch upstream

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git fetch origin

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git reset --hard origin/master
HEAD is now at 13d20fb some changes

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git status
On branch master
nothing to commit, working tree clean

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git branch
* master

sinha@MyPC MINGW64 /d/learnig DSA part 1 (master)
$ git branch -m master main

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$ git push -u origin main
To https://github.com/sinhaharsh24/DSA-learning.git
 ! [rejected]        main -> main (non-fast-forward)
error: failed to push some refs to 'https://github.com/sinhaharsh24/DSA-learning.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. If you want to integrate the remote changes,
hint: use 'git pull' before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$ git push -u origin main
To https://github.com/sinhaharsh24/DSA-learning.git
 ! [rejected]        main -> main (non-fast-forward)
error: failed to push some refs to 'https://github.com/sinhaharsh24/DSA-learning.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. If you want to integrate the remote changes,
hint: use 'git pull' before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$ git push -u origin main -f
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
To https://github.com/sinhaharsh24/DSA-learning.git
 + 65c10de...13d20fb main -> main (forced update)
branch 'main' set up to track 'origin/main'.

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$ git push origin --delete master
To https://github.com/sinhaharsh24/DSA-learning.git
 - [deleted]         master

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$ git branch
* main

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$ git remote -v
origin  https://github.com/sinhaharsh24/DSA-learning.git (fetch)
origin  https://github.com/sinhaharsh24/DSA-learning.git (push)
upstream        https://github.com/sinhaharsh24/DSA-learning.git (fetch)
upstream        https://github.com/sinhaharsh24/DSA-learning.git (push)

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$ git fetch origin

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$ git push upstream
Everything up-to-date

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$ git add .a
fatal: pathspec '.a' did not match any files

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$ git add .

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$ git commit -m "some new files"
[main 2b9d47a] some new files
 1 file changed, 2 insertions(+)
 create mode 100644 array_function.java

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$ git push upstream
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 304 bytes | 304.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0 (from 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/sinhaharsh24/DSA-learning.git
   13d20fb..2b9d47a  main -> main

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$ git roll back
git: 'roll' is not a git command. See 'git --help'.

The most similar commands are
        flow
        pull
        reflog

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$ git --help
usage: git [-v | --version] [-h | --help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--no-lazy-fetch]
           [--no-optional-locks] [--no-advice] [--bare] [--git-dir=<path>]
           [--work-tree=<path>] [--namespace=<name>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   restore    Restore working tree files
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   diff       Show changes between commits, commit and working tree, etc
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   backfill   Download missing objects in a partial clone
   branch     List, create, or delete branches
   commit     Record changes to the repository
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   reset      Reset current HEAD to the specified state
   switch     Switch branches
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$ git add .

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$ git commit -m "some new files"
[main abc1fbe] some new files
 7 files changed, 99 insertions(+)
 create mode 100644 array_list.java
 create mode 100644 linear_searching.java
 create mode 100644 out/production/learnig DSA part 1/array_function.class
 create mode 100644 out/production/learnig DSA part 1/array_list.class
 create mode 100644 out/production/learnig DSA part 1/linear_searching.class

sinha@MyPC MINGW64 /d/learnig DSA part 1 (main)
$
